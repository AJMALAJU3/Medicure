
services:
  express:
    build:
      context: ./backend/
      dockerfile: Dockerfile
    container_name: express-container
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: sh -c "npm install && npm run dev"
    depends_on:
      - redis
      - kafka
    networks:
      - medicure-network
    ports:
      - "3000:3000"

  redis:
    container_name: medicure-redis
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - medicure-network
    deploy:
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M

  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9091:9091"
    environment:
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: "broker,controller"
      KAFKA_CFG_LISTENERS: PLAINTEXT://0.0.0.0:9091,CONTROLLER://0.0.0.0:9093
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9091
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: "1@kafka:9093"
      KAFKA_KRAFT_CLUSTER_ID: "my-cluster-id"
      ALLOW_PLAINTEXT_LISTENER: "yes"
    networks:
      - medicure-network
    deploy:
      resources:
        limits:
          memory: 1G
        reservations:
          memory: 512M



volumes:
  redis-data:

networks:
  medicure-network:
    driver: bridge
