services:
  express:
    build:
      context: ./backend/
      dockerfile: Dockerfile
    container_name: express-container
    volumes:
      - ./backend:/app
      - /app/node_modules
    command: sh -c "npm install && npm run dev"
    depends_on:
      - redis
    networks:
      - medicure-network
    ports:
      - "3000:3000"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: react-container
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: sh -c "npm install && npm run dev"
    depends_on:
      - express
    networks:
      - medicure-network
    ports:
      - "5173:5173"
      
  redis:
    container_name: medicure-redis
    image: "redis:7.4"
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - medicure-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2182
    ports:
      - "2182:2182"
    networks:
      - medicure-network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "9091:9091"
    environment:
      KAFKA_HEAP_OPTS: "-Xmx512M -Xms256M" 
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2182
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9091
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9091
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - medicure-network


volumes:
  redis-data:

networks:
  medicure-network:
    driver: bridge